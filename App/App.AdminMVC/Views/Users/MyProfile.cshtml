@model EditUserViewModel

@using System.Security.Claims
@using App.ViewModels.PortfolioMvc.UserViewModels
@{
    Layout = null;
    var userId = int.Parse(User.Claims.First(claim => claim.Type == "sub").Value);
    var email = User.Claims.First(claim => claim.Type == "email").Value;
    var username = User.Claims.First(claim => claim.Type == "name").Value;
    var profileImageUrl = User.Claims.First(claim => claim.Type == "user-img").Value;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kullanıcı Profili</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>

        .custom-alert-success {
            position: fixed; /* Sayfada sabit konumlandırma */
            top: 50px; /* Ekranın üst kısmından 10px boşluk */
            left: 50%; /* Ekranın ortasına hizalama */
            transform: translateX(-50%); /* Ortalamak için translate */
            z-index: 1000; /* Diğer elementlerin üstünde görünmesini sağlar */
            background-color: #dff0d8;
            color: #3c763d;
            padding: 10px 20px;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .custom-alert-error {
            position: fixed; /* Sayfada sabit konumlandırma */
            top: 50px; /* Ekranın üst kısmından 10px boşluk */
            left: 50%; /* Ekranın ortasına hizalama */
            transform: translateX(-50%); /* Ortalamak için translate */
            z-index: 1000; /* Diğer elementlerin üstünde görünmesini sağlar */
            background-color: #f8d7da;
            color: #721c24;
            padding: 10px 20px;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        body {
            background-color: #0d0d0d;
            color: #f8f9fa;
            display: flex;
            flex-direction: column;
            align-items: center; /* Ortalamak için */
            height: 100vh;
            margin: 0;
            font-family: Arial, sans-serif;
        }

        .profile-container {
            background-color: #1c1c1e;
            border-radius: 10px;
            padding: 2rem;
            width: 100%;
            max-width: 450px;
            text-align: center;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
            border: 1px solid #333;
        }

        .profile-pic {
            border-radius: 50%;
            width: 120px;
            height: 120px;
            object-fit: cover;
            border: 3px solid #f8f9fa;
            margin-bottom: 1.5rem;
            transition: transform 0.3s ease;
        }

            .profile-pic:hover {
                transform: scale(1.05);
                border-color: #ffc107;
            }

        .btn-secondary {
            margin-top: 3rem;
            margin-bottom: 2rem;
            font-size: 0.9rem;
            color: #f8f9fa;
            background-color: #6c757d;
            border: none;
            transition: background-color 0.3s ease;
            padding: 0.5rem 1rem; /* Buton için iç boşluk */
            text-decoration: none; /* Linkin altını kaldır */
            border-radius: 5px; /* Kenarları yuvarlaştır */
        }

        .btn-secondary {
            background-color: #ffc107;
            color: #343a40;
        }

        .info-container {
            margin-top: 1rem;
            background-color: #2a2a2c;
            padding: 1rem;
            border-radius: 8px;
            border: 1px solid #333;
        }

        .form-label {
            color: #adb5bd;
            font-weight: bold;
        }

        .form-control {
            background-color: #343a40;
            color: #f8f9fa;
            border: 1px solid #444;
            border-radius: 5px;
        }

            .form-control:focus {
                box-shadow: 0 0 5px #ffc107;
                border-color: #ffc107;
            }

        .email-info, .label {
            color: #bdbdbd;
            font-weight: bold;
            text-align: left;
            margin-top: 0.5rem;
        }
    </style>
</head>
<body>

    @{
        if (TempData["SuccessMessage"] is not null)
        {
            <div class="alert custom-alert-success mt-5">
                @TempData["SuccessMessage"]
            </div>
        }

        if (TempData["ErrorMessage"] is not null)
        {
            <div class="alert custom-alert-error mt-5">
                @TempData["ErrorMessage"]
            </div>
        }

        if (ViewData["SuccessMessage"] is not null)
        {
            <div class="alert custom-alert-success mt-5">
                @ViewData["SuccessMessage"]
            </div>
        }

        if (ViewData["ErrorMessage"] is not null)
        {
            <div class="alert custom-alert-error mt-5">
                @ViewData["ErrorMessage"]
            </div>
        }
    }

    <div class="text-center mb-2">
        <a href="/" class="btn btn-secondary">Anasayfaya Dön</a> <!-- Buton stili uygulandı -->
    </div>

    <div class="text-center mb-4">
        <h3>Profilim</h3>
    </div>

    <div class="profile-container">
        <div class="text-center">

            <img src="@($"https://localhost:7085/uploads/{profileImageUrl}")" alt="Profil Resmi" class="profile-pic" id="profilePicture">

            <form id="editUserImageForm" asp-action="EditUserImage" method="post" enctype="multipart/form-data" onsubmit="return validateImageFile()">

                <input asp-for="Email" type="hidden" value="@email" />

                <div class="mb-3">
                    <input asp-for="ImageFile" class="form-control mb-3" type="file" accept="image/*" id="imageFileInput">
                    <span asp-validation-for="ImageFile" id="imageFileValidation" style="color:wheat;"></span>
                </div>

                @if (profileImageUrl == "default.png")
                {
                    <button type="submit" class="btn btn-primary">Fotoğraf Ekle</button>
                }
                else
                {
                    <button type="submit" class="btn btn-warning">Değiştir</button>
                }
            </form>

            @if (profileImageUrl is not "default.png")
            {
                <a href="/delete-user-img-@profileImageUrl" class="btn btn-sm btn-danger mt-3">Fotoğrafı Sil</a>
            }

        </div>

        <div class="info-container mt-4">
            <form id="editUsernameForm"  asp-action="EditUsername" method="post" onsubmit="return validateEditUsernameForm()">
                <input asp-for="Email" type="hidden" value="@email" />

                <div class="form-group">
                    <label asp-for="Username" class="form-label">Kullanıcı Adı</label>
                    <input asp-for="Username" value="@username" class="form-control mb-3" id="editUsername" data-original-value="@username" />
                    <span asp-validation-for="Username" id="editUsernameValidation" style="color:wheat;"></span>
                </div>

                <div class="form-group mt-3">
                    <button type="submit" class="btn btn-info">Değiştir</button>
                </div>
            </form>
        </div>

        <div class="info-container">
            <div class="label">Email:</div>
            <div class="email-info">@email</div>
        </div>
    </div>


    <script>
        function validateEditUsernameForm() {
            const form = document.getElementById("editUsernameForm");
            const usernameInput = form.querySelector("#editUsername");
            const validationMessage = form.querySelector("#editUsernameValidation");
            const username = usernameInput.value; // Boşluk kontrolü için trim kullanmıyoruz
            const originalUsername = usernameInput.getAttribute("data-original-value"); // Orijinal kullanıcı adı

            // Kullanıcı adı boşsa
            if (username.trim() === "") {
                validationMessage.innerText = "Kullanıcı adı boş olamaz.";
                return false;
            }
            // Kullanıcı adı 50 karakterden uzun olmamalı
            else if (username.length > 50) {
                validationMessage.innerText = "Kullanıcı adı en fazla 50 karakter olabilir.";
                return false;
            }
            // Kullanıcı adı boşluk içeriyorsa
            else if (/\s/.test(username)) {
                validationMessage.innerText = "Kullanıcı adı boşluk içeremez.";
                return false;
            }
            // Kullanıcı adı, orijinal kullanıcı adı ile aynıysa formu gönderme
            else if (username === originalUsername) {
                // Uyarı vermeden sadece formun gönderilmesini engelliyoruz
                return false;
            }

            // Tüm koşullar sağlandığında hata mesajını temizleyip formu gönder
            validationMessage.innerText = "";
            return true;
        }


        function validateImageFile() {
            const form = document.getElementById("editUserImageForm");
            const imageFileInput = form.querySelector("#imageFileInput");
            const validationMessage = form.querySelector("#imageFileValidation");
            const file = imageFileInput.files[0]; // Yüklenen dosya

            // Dosya yoksa
            if (!file) {
                validationMessage.innerText = "Lütfen bir resim dosyası yükleyin.";
                return false;
            }

            // Geçerli bir resim dosyası mı kontrolü
            const validImageTypes = ["image/jpeg", "image/png", "image/gif", "image/jpg"]; // Geçerli resim dosya türleri
            if (!validImageTypes.includes(file.type)) {
                validationMessage.innerText = "Geçerli bir resim dosyası yükleyin (JPEG, PNG, GIF).";
                return false;
            }

            // Tüm koşullar sağlandığında hata mesajını temizleyip formu gönder
            validationMessage.innerText = "";
            return true;
        }


        document.addEventListener('DOMContentLoaded', function () {
            // Hem success hem de error alert'lerini seç
            var alerts = document.querySelectorAll('.custom-alert-success, .custom-alert-error');

            alerts.forEach(function (alert) {
                if (alert) {
                    setTimeout(function () {
                        alert.style.transition = 'opacity 0.5s ease';
                        alert.style.opacity = '0';
                        setTimeout(function () {
                            alert.remove();
                        }, 500); // Görsel olarak kaybolduktan sonra tamamen kaldır
                    }, 5000); // 5 saniye sonra kaybolmaya başla
                }
            });
        });
    </script>
</body>
</html>
