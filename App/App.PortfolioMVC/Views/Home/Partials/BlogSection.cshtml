@model List<HomeBlogPostsPortfolioViewModel>

<section class="ftco-section" id="blog-section">
    <div class="container">
        <div class="row justify-content-center mb-5 pb-5">
            <div class="col-md-7 heading-section text-center ftco-animate">
                <h1 class="big big-2">Blog</h1>
                <h2 class="mb-4">Blog Postlarım</h2>
                <p style="color:wheat;">Blog Postlarımı görüntüleyebilir ve yorum yazarak görüşlerinizi benimle ve diğer okurlarla paylaşabilirsiniz.</p>
            </div>
        </div>
        <div class="row d-flex justify-content-center">

            @if(Model is not null && Model.Count > 0)
            {
                @foreach (var blogPost in Model)
                {
                    <div class="col-md-4 d-flex ftco-animate">
                        <div class="blog-entry justify-content-end">
                            <a href="/blog-post-@blogPost.Id" class="block-20" style="background-image: url('images/blog-post-img.jpg');">
                            </a>
                            <div class="text mt-3 float-right d-block">
                                <div class="d-flex align-items-center mb-3 meta">
                                    <p class="mb-0">
                                        <span class="mr-2">@blogPost.PublishDate.ToString("dd MMMM yyyy")</span>
                                        <a class="meta-chat ml-5"><span class="icon-chat"></span> @blogPost.CommentsCount</a>
                                    </p>
                                </div>
                                <h3 class="heading">
                                    <a href="/blog-post-@blogPost.Id" class="blog-title" data-title="@blogPost.Title"></a>
                                </h3>
                                <p class="blog-content" data-content="@blogPost.Content"></p>

                            </div>
                        </div>
                    </div>

                }
            }
            else if (Model != null && Model.Count == 0)
            {
                <div class="col-12 text-center">
                    <h3>Şu Anda Görüntülenecek Bir Blog Post Bulunmuyor</h3>
                </div>
            }
            else
            {
                <div class="col-12 text-center">
                    <h3>Şu Anda Blog Post Bilgilerine Ulaşılamıyor</h3>
                </div>
            }               
        </div>
        <!-- Daha Fazlası Butonu -->
        <div class="row justify-content-center mt-4">
            <div class="col-md-4 text-center">
                <a href="/all-blog-posts" class="btn btn-primary py-2 px-4">Daha Fazla Blog Post</a>
            </div>
        </div>
    </div>
</section>

<script>
    function updateBlogTitlesAndContents() {
        const titleElements = document.querySelectorAll('.blog-title'); // Tüm blog başlıklarını seç
        const contentElements = document.querySelectorAll('.blog-content'); // Tüm blog içeriklerini seç
        const maxTitleLength = 30;
        const maxContentLengthMobile = 170;
        const maxContentLengthDesktop = 80;

        titleElements.forEach((titleElement, index) => {
            const originalTitle = titleElement.getAttribute('data-title'); // Title verisini 'data-title' attribute'undan alıyoruz

            // 768px'in altında tam başlık göster
            if (window.matchMedia("(max-width: 767px)").matches) {
                titleElement.textContent = originalTitle;
            }
            // 768px ve üzeri için başlık uzunluğunu kontrol et
            else {
                if (originalTitle.length > maxTitleLength) {
                    titleElement.textContent = originalTitle.substring(0, maxTitleLength) + '..';
                } else {
                    titleElement.textContent = originalTitle;
                }
            }

            // İçerik güncellemesi
            const contentElement = contentElements[index]; // İlgili içerik elemanını seç
            const originalContent = contentElement.getAttribute('data-content'); // İçerik verisini 'data-content' attribute'undan alıyoruz

            // 768px'in altında 140 karakter göster
            if (window.matchMedia("(max-width: 767px)").matches) {
                contentElement.textContent = `"${originalContent.substring(0, maxContentLengthMobile)}.."`;
            }
            // 768px ve üzeri için 80 karakter göster
            else {
                contentElement.textContent = `"${originalContent.substring(0, maxContentLengthDesktop)}.."`;
            }
        });
    }

    // Sayfa yüklendiğinde ve pencere yeniden boyutlandırıldığında güncelle
    window.addEventListener('load', updateBlogTitlesAndContents);
    window.addEventListener('resize', updateBlogTitlesAndContents);
</script>


