@model RegisterViewModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kayıt Ol</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>

        body {
            font-family: 'Roboto', sans-serif; /* Yazı tipi ayarı */
            color: #fff; /* Genel yazı rengi */
        }
        .custom-alert-success {
            position: fixed; /* Sayfada sabit konumlandırma */
            top: 10px; /* Ekranın üst kısmından 10px boşluk */
            left: 50%; /* Ekranın ortasına hizalama */
            transform: translateX(-50%); /* Ortalamak için translate */
            z-index: 1000; /* Diğer elementlerin üstünde görünmesini sağlar */
            background-color: wheat; /* Arka plan rengi */
            color: #6b4f3a; /* Yazı rengi (daha koyu bir ton) */
            padding: 10px 20px;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }


    .custom-alert-error {
        position: fixed; /* Sayfada sabit konumlandırma */
        top: 10px; /* Ekranın üst kısmından 10px boşluk */
        left: 50%; /* Ekranın ortasına hizalama */
        transform: translateX(-50%); /* Ortalamak için translate */
        z-index: 1000; /* Diğer elementlerin üstünde görünmesini sağlar */
        background-color: darkred;
        color: wheat;
        padding: 10px 20px;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

        body {
            background-color: #121212;
            font-family: Arial, sans-serif;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
        }

        

        .signup-container {
            background: linear-gradient(145deg, #333333, #444444, #333333);
            border-radius: 10px;
            padding: 40px;
            max-width: 500px;
            width: 100%;
            color: #f5f5f5;
            box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.5);
            height:620px; /* Kutu boyutunu artırdım */
        }

            .signup-container h2 {
                color: #f1c40f;
                margin-bottom: 30px;
                text-align: center;
                font-weight: bold;
            }

        .form-control {
            background: rgba(255, 255, 255, 0.1);
            border: none;
            color: #fff; /* Yazı rengini beyaz yapmak için */
        }

            /* Placeholder yazısının rengini beyaz yapmak için */
            .form-control::placeholder {
                color: #fff;
                opacity: 0.7; /* Placeholder için biraz şeffaflık ekleyebilirsin */
            }

        .text-danger {
            font-size: 0.85rem;
            margin-top: 5px;
            color: wheat !important; /* Burada renk değiştirilmiştir */
        }
            .form-control:focus {
                background: rgba(255, 255, 255, 0.2);
                box-shadow: none;
                color: #fff; /* Yazı rengini beyaz yap */
            }

        .btn-custom {
            background-color: #1e90ff;
            color: #fff;
            font-weight: bold;
            border-radius: 25px;
            padding: 10px;
            transition: background-color 0.3s ease;
            width: 100%;
            margin-top: 15px;
        }

            .btn-custom:hover {
                background-color: #3742fa;
            }

    </style>
</head>
<body>
@{
    if (TempData["SuccessMessage"] is not null)
    {
                <div class="alert custom-alert-success mt-5">
                @TempData["SuccessMessage"]
                </div>
    }

    if (TempData["ErrorMessage"] is not null)
    {
                <div class="alert custom-alert-error mt-5">
                @TempData["ErrorMessage"]
                </div>
    }

    if (ViewData["SuccessMessage"] is not null)
    {
                <div class="alert custom-alert-success mt-5">
                @ViewData["SuccessMessage"]
                </div>
    }

    if (ViewData["ErrorMessage"] is not null)
    {
                <div class="alert custom-alert-error mt-5">
                @ViewData["ErrorMessage"]
                </div>
    }
}
    <div class="signup-container">


        <h2 class="mb-4">Kayıt Ol</h2>

        <a href="/" class="btn btn-light" style="margin-bottom: 30px; margin-top: 30px; display: block; width: 55%; text-align: center; border-radius: 25px; font-weight: bold; margin-left: auto; margin-right: auto;">
            Anasayfaya
        </a>


        
        <form id="signupForm" asp-action="Register" method="post" autocomplete="off">
            @Html.AntiForgeryToken()
            
            <div class="form-group">
                <input id="Username" asp-for="Username" class="form-control" placeholder="Kullanıcı Adı" autocomplete="off">
                <span id="usernameError" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input id="Email" asp-for="Email" class="form-control" placeholder="Email" autocomplete="off">
                <span id="emailError" class="text-danger"></span>
            </div>

            <div class="form-group">
                <div class="input-group">
                    <input id="Password" asp-for="Password" class="form-control" type="password" placeholder="Şifre" autocomplete="off">
                    <div class="input-group-append" id="togglePassword">
                        <span class="input-group-text"><i class="fas fa-eye"></i></span>
                    </div>
                </div>
                <span id="passwordError" class="text-danger"></span>
            </div>

            <div class="form-group">
                <div class="input-group">
                    <input id="ConfirmPassword" asp-for="ConfirmPassword" class="form-control" type="password" placeholder="Şifre Tekrar" autocomplete="off">
                    <div class="input-group-append" id="toggleConfirmPassword">
                        <span class="input-group-text"><i class="fas fa-eye"></i></span>
                    </div>
                </div>
                <span id="confirmPasswordError" class="text-danger"></span>
            </div>


            <button type="submit" class="btn btn-custom" style="background-color: wheat; color: #333; border: none; width: 50%;margin-left: auto; margin-right: auto;display: block; margin-top:50px; ">Kayıt Ol</button>

        </form>
    </div>

    <script>


  document.addEventListener('DOMContentLoaded', function () {
      var alerts = document.querySelectorAll('.custom-alert-success, .custom-alert-error');
      alerts.forEach(function (alert) {
          if (alert) {
              setTimeout(function () {
                  alert.style.transition = 'opacity 0.5s ease';
                  alert.style.opacity = '0';
                  setTimeout(function () {
                      alert.remove();
                  }, 500);
              }, 5000);
          }
      });
  });
        // Şifre görünürlüğünü toggle etme
        const togglePassword = document.getElementById('togglePassword');
        const passwordInput = document.getElementById('Password');
        togglePassword.addEventListener('click', function () {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            this.querySelector('i').classList.toggle('fa-eye-slash');
        });

        // Şifre tekrar görünürlüğünü toggle etme
        const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
        const confirmPasswordInput = document.getElementById('ConfirmPassword');
        toggleConfirmPassword.addEventListener('click', function () {
            const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            confirmPasswordInput.setAttribute('type', type);
            this.querySelector('i').classList.toggle('fa-eye-slash');
        });

        document.getElementById('signupForm').addEventListener('submit', function (event) {
            event.preventDefault();
            document.getElementById('usernameError').innerText = '';
            document.getElementById('emailError').innerText = '';
            document.getElementById('passwordError').innerText = '';
            document.getElementById('confirmPasswordError').innerText = '';

            const username = document.getElementById('Username').value;
            const usernameTrim = username.trim();
            const email = document.getElementById('Email').value;
            const emailTrim = email.trim();
            const password = document.getElementById('Password').value;
            const confirmPassword = document.getElementById('ConfirmPassword').value;

            let hasError = false;

            if (!usernameTrim) {
                document.getElementById('usernameError').innerText = 'Kullanıcı ismi boş olamaz.';
                hasError = true;
            } else if (username.length > 50) {
                document.getElementById('usernameError').innerText = 'Kullanıcı ismi maksimum 50 karakter olabilir.';
                hasError = true;
            } else if (/\s/.test(username)) {
                document.getElementById('usernameError').innerText = 'Kullanıcı ismi boşluk içeremez.';
                hasError = true;
            }

            const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            if (!emailTrim) {
                document.getElementById('emailError').innerText = 'Email boş olamaz.';
                hasError = true;
            } else if (email.length > 100) {
                document.getElementById('emailError').innerText = 'Email maksimum 100 karakter olabilir.';
                hasError = true;
            } else if (!emailRegex.test(email)) {
                document.getElementById('emailError').innerText = 'Geçerli bir email adresi giriniz.';
                hasError = true;
            }

            if (!password) {
                document.getElementById('passwordError').innerText = 'Şifre boş olamaz.';
                hasError = true;
            } else if (password.length < 8 || password.length > 15) {
                document.getElementById('passwordError').innerText = 'Şifre 8 ile 15 karakter arasında olmalıdır.';
                hasError = true;
            }

            if (!confirmPassword) {
                document.getElementById('confirmPasswordError').innerText = 'Şifreyi onaylama alanı boş olamaz.';
                hasError = true;
            } else if (confirmPassword !== password) {
                document.getElementById('confirmPasswordError').innerText = 'Şifreler eşleşmiyor.';
                hasError = true;
            }

            if (!hasError) {
                this.submit();
            }
        });
    </script>

</body>
</html>
